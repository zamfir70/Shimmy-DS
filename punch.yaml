# PUNCH Configuration for Shimmy-DS
# Comprehensive Analysis Configuration for RIP+RIC Unified Protocol Stack

project_name: "shimmy-ds"
version: "1.3.3+recursive-intelligence"
description: "Revolutionary AI-assisted creative writing platform with world's first recursive narrative intelligence system and RIP+RIC unified protocol stack"

# Languages to analyze
languages:
  - rust
  - python
  - toml
  - yaml
  - markdown

# Paths to exclude from analysis
exclude_paths:
  - target/
  - .git/
  - node_modules/
  - release-artifacts/
  - coverage/
  - logs/
  - test-huggingface-model/
  - test-safetensors-model/
  - __pycache__/
  - "*.min.js"
  - "*.pyc"
  - "*.pyo"
  - "*.so"
  - "*.dll"
  - "*.exe"
  - "*.lock"

# Analysis configuration
analysis:
  # Enable AI-powered insights for narrative intelligence analysis
  ai_insights: true

  # Quality threshold for advanced narrative system
  quality_threshold: 90

  # Security scanning for cross-language communication
  security_scan: true

  # Performance analysis for recursive systems
  performance_analysis: true

  # Include test coverage analysis
  test_coverage: true

  # Deep architectural analysis
  architecture_analysis: true

# Output preferences
output:
  format: json
  verbose: true
  colors: true
  include_metrics: true
  detailed_reports: true

# Test generation settings
testing:
  # Target coverage for narrative intelligence system
  target_coverage: 95

  # Test frameworks per language
  frameworks:
    rust: std
    python: pytest

  # Generate integration tests for RIP+RIC protocol
  integration_tests: true

  # Generate property-based tests for recursive systems
  property_tests: true

  # Generate cross-language communication tests
  cross_language_tests: true

# Language-specific settings
languages_config:
  rust:
    # Rust-specific analysis for RIC system
    ownership_analysis: true
    lifetime_analysis: true
    async_safety: true
    memory_safety: true
    concurrency_analysis: true

    # Shimmy-DS specific checks
    recursive_safety: true
    cross_system_communication: true

  python:
    # Python-specific analysis for RIP system
    type_hints: true
    security_scan: true
    async_analysis: true

    # RIP system specific checks
    subprocess_security: true
    json_validation: true
    cross_language_interface: true

# Shimmy-DS specific analysis categories
shimmy_analysis:
  # Recursive Narrative Intelligence System Analysis
  recursive_intelligence:
    # CAPR loop analysis validation
    capr_loop_integrity: true

    # Constraint space modeling validation
    constraint_space_coherence: true

    # Multi-level recursion safety
    recursion_safety_analysis: true

    # Character consistency engine validation
    character_engine_integrity: true

    # Reader engagement pattern validation
    engagement_pattern_analysis: true

  # RIP+RIC Unified Protocol Analysis
  rip_ric_protocol:
    # Cross-language communication safety
    cross_language_safety: true

    # Constraint genome validation
    constraint_genome_integrity: true

    # Pathogen detection system validation
    pathogen_detection_coverage: true

    # ZC gate system validation
    zc_gate_integrity: true

    # Unified arbitration logic validation
    arbitration_logic_safety: true

    # Character fusion system validation
    character_fusion_integrity: true

    # Fail-closed protection validation
    fail_closed_protection: true

  # SHIMMY-DS Legacy System Analysis
  shimmy_legacy:
    # Augmentation pipeline validation
    augmentation_pipeline_integrity: true

    # Configuration management validation
    config_management_safety: true

    # Drift stabilization validation
    drift_stabilization_analysis: true

# Security focus areas
security_focus:
  # Cross-language communication security
  cross_language_security:
    subprocess_validation: true
    json_sanitization: true
    process_isolation: true
    timeout_protection: true

  # Narrative content security
  content_security:
    input_validation: true
    content_sanitization: true
    pathogen_detection: true

  # System integrity security
  system_security:
    fail_closed_mechanisms: true
    emergency_recovery: true
    audit_trail_integrity: true

# Performance focus areas
performance_focus:
  # Recursive system performance
  recursive_performance:
    memory_efficiency: true
    cpu_optimization: true
    concurrent_processing: true

  # Cross-language performance
  cross_language_performance:
    subprocess_overhead: true
    json_serialization_efficiency: true
    communication_latency: true

  # Real-time analysis performance
  realtime_performance:
    analysis_speed: true
    memory_footprint: true
    scalability_analysis: true

# Integration settings
integrations:
  # CI/CD integration for comprehensive testing
  ci:
    fail_on_quality_threshold: true
    fail_on_security_issues: true
    generate_reports: true
    export_metrics: true

  # IDE integration
  ide:
    vscode_tasks: true
    rust_analyzer_integration: true
    python_lsp_integration: true

# Custom quality rules for narrative intelligence system
custom_rules:
  # Code quality rules
  quality:
    max_function_length: 150  # Larger for complex narrative algorithms
    max_cyclomatic_complexity: 15  # Higher for narrative logic
    max_cognitive_complexity: 20

    # Recursive system specific rules
    max_recursion_depth: 10
    recursive_safety_checks: true

  # Security rules for cross-language system
  security:
    check_secrets: true
    check_hardcoded_passwords: true
    validate_subprocess_calls: true
    check_json_parsing: true
    validate_cross_language_interfaces: true

  # Architecture rules
  architecture:
    enforce_separation_of_concerns: true
    validate_module_dependencies: true
    check_circular_dependencies: true
    validate_cross_language_contracts: true

# Reporting configuration
reports:
  # Generate comprehensive HTML reports
  html: true

  # Generate SARIF for security tools
  sarif: true

  # Generate detailed markdown reports
  markdown: true

  # Export formats
  export_formats:
    - json
    - yaml
    - csv
    - xml
    - markdown

  # Shimmy-DS specific reports
  shimmy_reports:
    # Recursive intelligence system health report
    recursive_intelligence_health: true

    # RIP+RIC protocol integrity report
    rip_ric_protocol_report: true

    # Cross-language communication audit
    cross_language_audit: true

    # Performance analysis report
    performance_analysis_report: true

    # Security assessment report
    security_assessment_report: true

# Advanced analysis settings
advanced_analysis:
  # AI-powered narrative intelligence analysis
  ai_narrative_analysis:
    detect_narrative_patterns: true
    analyze_recursive_structures: true
    validate_character_consistency: true
    assess_engagement_patterns: true

  # Cross-system dependency analysis
  dependency_analysis:
    rust_crate_analysis: true
    python_package_analysis: true
    cross_language_dependency_tracking: true

  # Innovation impact analysis
  innovation_analysis:
    assess_technical_innovation: true
    measure_system_complexity: true
    evaluate_implementation_quality: true
    benchmark_against_standards: true

# Metrics to track
metrics:
  # Code metrics
  code_metrics:
    - lines_of_code
    - cyclomatic_complexity
    - cognitive_complexity
    - test_coverage
    - documentation_coverage

  # Shimmy-DS specific metrics
  shimmy_metrics:
    - recursive_system_coverage
    - cross_language_integration_points
    - narrative_intelligence_features
    - protocol_integrity_score
    - innovation_index

  # Performance metrics
  performance_metrics:
    - memory_efficiency_score
    - cpu_optimization_score
    - real_time_analysis_speed
    - cross_language_overhead

  # Security metrics
  security_metrics:
    - security_vulnerability_count
    - fail_closed_protection_coverage
    - input_validation_coverage
    - audit_trail_completeness

# Notification settings
notifications:
  # Quality threshold notifications
  quality_alerts:
    enabled: true
    threshold: 85

  # Security issue notifications
  security_alerts:
    enabled: true
    severity_threshold: medium

  # Performance regression notifications
  performance_alerts:
    enabled: true
    regression_threshold: 10  # 10% performance regression

# Documentation analysis
documentation_analysis:
  # Check documentation completeness
  completeness_check: true

  # Validate code examples
  example_validation: true

  # Check for narrative intelligence documentation
  narrative_intelligence_docs: true

  # Check for RIP+RIC protocol documentation
  rip_ric_protocol_docs: true